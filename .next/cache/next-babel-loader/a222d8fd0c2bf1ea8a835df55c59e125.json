{"ast":null,"code":"var __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport React, { Component } from 'react';\nimport { Table, Button, Message, Icon, Popup } from 'semantic-ui-react';\nimport web3 from '../Ethereum/web3';\nimport Campaign from '../Ethereum/campaign';\nexport default class RequestRow extends Component {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"state\", {\n      errorMessageApprove: '',\n      loadingApprove: false,\n      errorMessageFinalize: '',\n      loadingFinalize: false\n    });\n    _defineProperty(this, \"onApprove\", async () => {\n      this.setState({\n        loadingApprove: true,\n        errorMessageApprove: ''\n      });\n      try {\n        const campaign = Campaign(this.props.address);\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.approveRequest(this.props.id).send({\n          from: accounts[0]\n        });\n      } catch (error) {\n        this.setState({\n          errorMessageApprove: error.message\n        });\n      } finally {\n        this.setState({\n          loadingApprove: false\n        });\n      }\n    });\n    _defineProperty(this, \"onFinalize\", async () => {\n      this.setState({\n        loadingFinalize: true,\n        errorMessageFinalize: ''\n      });\n      try {\n        const campaign = Campaign(this.props.address);\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.finalizeRequest(this.props.id).send({\n          from: accounts[0]\n        });\n      } catch (error) {\n        this.setState({\n          errorMessageFinalize: error.message\n        });\n      } finally {\n        this.setState({\n          loadingFinalize: false\n        });\n      }\n    });\n  }\n  render() {\n    const {\n      Row,\n      Cell\n    } = Table;\n    const {\n      id,\n      request,\n      approversCount\n    } = this.props;\n    const readyToFinalize = request.approvalCount > approversCount / 2;\n    return __jsx(Row, {\n      disabled: request.complete,\n      positive: readyToFinalize && !request.complete\n    }, __jsx(Cell, null, id), __jsx(Cell, null, request.description), __jsx(Cell, null, web3.utils.fromWei(request.value, 'ether'), \" (ether)\"), __jsx(Cell, null, request.recipient), __jsx(Cell, null, request.approvalCount, \"/\", approversCount), __jsx(Cell, {\n      error: !!this.state.errorMessageApprove\n    }, __jsx(Popup, {\n      header: \"Error\",\n      content: this.state.errorMessageApprove,\n      trigger: __jsx(Icon, {\n        name: \"attention\",\n        style: {\n          display: this.state.errorMessageApprove ? 'inline-block' : 'none'\n        }\n      }),\n      hoverable: true\n    }), request.complete ? null : __jsx(Button, {\n      color: \"green\",\n      loading: this.state.loadingApprove,\n      basic: true,\n      onClick: this.onApprove\n    }, \"Approve\")), __jsx(Cell, {\n      error: !!this.state.errorMessageFinalize\n    }, __jsx(Popup, {\n      header: \"Error\",\n      content: this.state.errorMessageFinalize,\n      trigger: __jsx(Icon, {\n        name: \"attention\",\n        style: {\n          display: this.state.errorMessageFinalize ? 'inline-block' : 'none'\n        }\n      }),\n      hoverable: true\n    }), request.complete ? null : __jsx(Button, {\n      color: \"teal\",\n      loading: this.state.loadingFinalize,\n      basic: true,\n      onClick: this.onFinalize\n    }, \"Finalize\")));\n  }\n}","map":{"version":3,"names":["React","Component","Table","Button","Message","Icon","Popup","web3","Campaign","RequestRow","constructor","args","_defineProperty","errorMessageApprove","loadingApprove","errorMessageFinalize","loadingFinalize","setState","campaign","props","address","accounts","eth","getAccounts","methods","approveRequest","id","send","from","error","message","finalizeRequest","render","Row","Cell","request","approversCount","readyToFinalize","approvalCount","__jsx","disabled","complete","positive","description","utils","fromWei","value","recipient","state","header","content","trigger","name","style","display","hoverable","color","loading","basic","onClick","onApprove","onFinalize"],"sources":["C:/Users/patel/Downloads/CrowdFunding-Ethereum/CrowdFunding-Ethereum/components/RequestRow.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { Table, Button, Message, Icon, Popup } from 'semantic-ui-react';\r\nimport web3 from '../Ethereum/web3';\r\nimport Campaign from '../Ethereum/campaign';\r\n\r\nexport default class RequestRow extends Component {\r\n\r\n    state = {\r\n        errorMessageApprove: '',\r\n        loadingApprove: false,\r\n        errorMessageFinalize: '',\r\n        loadingFinalize: false,\r\n    };\r\n\r\n    onApprove = async () => {\r\n\r\n        this.setState({\r\n            loadingApprove: true,\r\n            errorMessageApprove: ''\r\n        });\r\n\r\n        try {\r\n            const campaign = Campaign(this.props.address);\r\n\r\n            const accounts = await web3.eth.getAccounts();\r\n            await campaign.methods.approveRequest(this.props.id).send({\r\n                from: accounts[0]\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.setState({\r\n                errorMessageApprove: error.message\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loadingApprove: false,\r\n            });\r\n        }\r\n    };\r\n\r\n    onFinalize = async () => {\r\n        this.setState({\r\n            loadingFinalize: true,\r\n            errorMessageFinalize: ''\r\n        });\r\n        try {\r\n            const campaign = Campaign(this.props.address);\r\n\r\n            const accounts = await web3.eth.getAccounts();\r\n\r\n            await campaign.methods.finalizeRequest(this.props.id).send({\r\n                from: accounts[0]\r\n            });\r\n        } catch (error) {\r\n            this.setState({\r\n                errorMessageFinalize: error.message\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loadingFinalize: false,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { Row, Cell } = Table;\r\n        const { id, request, approversCount } = this.props;\r\n        const readyToFinalize = request.approvalCount > approversCount / 2;\r\n\r\n        return (\r\n            <Row disabled={request.complete} positive={readyToFinalize && !request.complete} >\r\n                <Cell>{id}</Cell>\r\n                <Cell>{request.description}</Cell>\r\n                <Cell>{web3.utils.fromWei(request.value, 'ether')} (ether)</Cell>\r\n                <Cell>{request.recipient}</Cell>\r\n                <Cell>{request.approvalCount}/{approversCount}</Cell>\r\n                <Cell error={!!this.state.errorMessageApprove}>\r\n                    <Popup\r\n                        header=\"Error\"\r\n                        content={this.state.errorMessageApprove}\r\n                        trigger={<Icon name='attention'\r\n                            style={{ display: this.state.errorMessageApprove ? 'inline-block' : 'none' }} />}\r\n                        hoverable />\r\n                    {request.complete ? null : (<Button color='green' loading={this.state.loadingApprove} basic onClick={this.onApprove}>Approve</Button>)}\r\n                </Cell>\r\n                <Cell error={!!this.state.errorMessageFinalize}>\r\n                    <Popup\r\n                        header=\"Error\"\r\n                        content={this.state.errorMessageFinalize}\r\n                        trigger={<Icon name='attention'\r\n                            style={{ display: this.state.errorMessageFinalize ? 'inline-block' : 'none' }} />}\r\n                        hoverable />\r\n                    {request.complete ? null : (<Button color='teal' loading={this.state.loadingFinalize} basic onClick={this.onFinalize}>Finalize</Button>)}\r\n                </Cell>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}