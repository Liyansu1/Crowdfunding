{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Table, Grid, Icon, Label } from 'semantic-ui-react';\nimport Layout from '../../../components/Layout';\nimport { Link } from '../../../routes';\nimport Campaings from '../../../Ethereum/campaign';\nimport RequestRow from '../../../components/RequestRow';\nimport web3 from '../../../Ethereum/web3';\nexport default class RequestIndex extends Component {\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    const campaign = Campaings(address);\n    const requestCount = await campaign.methods.getRequestsCount().call();\n    const approversCount = await campaign.methods.approversCount().call();\n    const summary = await campaign.methods.getSummary().call();\n    const contractBalance = summary[1];\n    const requests = await Promise.all(Array(parseInt(requestCount)).fill().map((element, index) => {\n      return campaign.methods.requests(index).call();\n    }));\n    return {\n      address,\n      requests,\n      requestCount,\n      approversCount,\n      contractBalance\n    };\n  }\n  renderRows() {\n    return this.props.requests.map((request, index) => {\n      return __jsx(RequestRow, {\n        key: index,\n        request: request,\n        id: index,\n        address: this.props.address,\n        approversCount: this.props.approversCount\n      });\n    });\n  }\n  render() {\n    const {\n      Header,\n      Row,\n      HeaderCell,\n      Body\n    } = Table;\n    const campaignsBalance = this.props.contractBalance;\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Request\"), __jsx(Grid, {\n      columns: \"equal\"\n    }, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Link, {\n      route: `/campaigns/${this.props.address}/`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      icon: true\n    }, __jsx(Icon, {\n      name: \"home\"\n    }))))), __jsx(Grid.Column, {\n      textAlign: \"center\"\n    }, __jsx(Label, null, __jsx(Icon, {\n      name: \"ethereum\"\n    }), \" \", web3.utils.fromWei(campaignsBalance, 'ether'), \" ether\")), __jsx(Grid.Column, {\n      textAlign: \"right\"\n    }, __jsx(Link, {\n      route: `/campaigns/${this.props.address}/requests/new`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      primary: true\n    }, \"Add Request\")))))), __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"ID\"), __jsx(HeaderCell, null, \"Description\"), __jsx(HeaderCell, null, \"Amount\"), __jsx(HeaderCell, null, \"Recipient\"), __jsx(HeaderCell, null, \"Approval\"), __jsx(HeaderCell, null, \"Approve\"), __jsx(HeaderCell, null, \"Finalize\"))), __jsx(Body, null, this.renderRows())), __jsx(\"div\", null, \"Found \", this.props.requestCount, \" requests.\"));\n  }\n}","map":{"version":3,"names":["React","Component","Button","Table","Grid","Icon","Label","Layout","Link","Campaings","RequestRow","web3","RequestIndex","getInitialProps","props","address","query","campaign","requestCount","methods","getRequestsCount","call","approversCount","summary","getSummary","contractBalance","requests","Promise","all","Array","parseInt","fill","map","element","index","renderRows","request","__jsx","key","id","render","Header","Row","HeaderCell","Body","campaignsBalance","columns","Column","route","icon","name","textAlign","utils","fromWei","primary"],"sources":["C:/Users/patel/Downloads/CrowdFunding-Ethereum/CrowdFunding-Ethereum/pages/campaigns/requests/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Table, Grid, Icon, Label } from 'semantic-ui-react';\r\nimport Layout from '../../../components/Layout';\r\nimport { Link } from '../../../routes';\r\nimport Campaings from '../../../Ethereum/campaign';\r\nimport RequestRow from '../../../components/RequestRow';\r\nimport web3 from '../../../Ethereum/web3';\r\n\r\nexport default class RequestIndex extends Component {\r\n\r\n    static async getInitialProps(props) {\r\n        const { address } = props.query;\r\n        const campaign = Campaings(address);\r\n        const requestCount = await campaign.methods.getRequestsCount().call();\r\n        const approversCount = await campaign.methods.approversCount().call();\r\n        const summary = await campaign.methods.getSummary().call();\r\n        const contractBalance = summary[1];\r\n\r\n        const requests = await Promise.all(\r\n            Array(parseInt(requestCount)).fill().map((element, index) => {\r\n                return campaign.methods.requests(index).call()\r\n            })\r\n        );\r\n\r\n        return { address, requests, requestCount, approversCount, contractBalance };\r\n    }\r\n\r\n    renderRows() {\r\n        return this.props.requests.map((request, index) => {\r\n            return <RequestRow\r\n                key={index}\r\n                request={request}\r\n                id={index}\r\n                address={this.props.address}\r\n                approversCount={this.props.approversCount}\r\n            />;\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { Header, Row, HeaderCell, Body } = Table;\r\n        const campaignsBalance = this.props.contractBalance;\r\n\r\n        return (\r\n            <Layout>\r\n                <h3>Request</h3>\r\n                <Grid columns='equal'>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Link route={`/campaigns/${this.props.address}/`}>\r\n                                <a>\r\n                                    <Button icon><Icon name='home' /></Button>\r\n                                </a>\r\n                            </Link>\r\n                        </Grid.Column>\r\n                        <Grid.Column textAlign='center'>\r\n                            <Label>\r\n                                <Icon name='ethereum' /> {web3.utils.fromWei(campaignsBalance, 'ether')} ether\r\n                            </Label>\r\n                        </Grid.Column>\r\n                        <Grid.Column textAlign='right'>\r\n                            <Link route={`/campaigns/${this.props.address}/requests/new`}>\r\n                                <a>\r\n                                    <Button primary>Add Request</Button>\r\n                                </a>\r\n                            </Link>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n\r\n\r\n                <Table>\r\n                    <Header>\r\n                        <Row>\r\n                            <HeaderCell>ID</HeaderCell>\r\n                            <HeaderCell>Description</HeaderCell>\r\n                            <HeaderCell>Amount</HeaderCell>\r\n                            <HeaderCell>Recipient</HeaderCell>\r\n                            <HeaderCell>Approval</HeaderCell>\r\n                            <HeaderCell>Approve</HeaderCell>\r\n                            <HeaderCell>Finalize</HeaderCell>\r\n                        </Row>\r\n                    </Header>\r\n\r\n                    <Body>\r\n                        {this.renderRows()}\r\n                    </Body>\r\n                </Table>\r\n\r\n                <div>Found {this.props.requestCount} requests.</div>\r\n\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}